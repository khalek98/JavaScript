Что такое DOM и Virtual DOM
https://habr.com/ru/post/256965/


Что такое понятия императивный и декларативный? 
https://tproger.ru/translations/imperative-declarative-programming-concepts/


||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
Урок 93. Рвбота со списками и алгоритм согласования.
- Зачем нужен этот алгоритм?:
    -Для оптимизации скорости работы приложения.
Выводы:
1. Рекат обновляет в интерфейсе только те елементы, которые действительно изменились.
2. В этом ему помогает алгоритм согласования, которые сравнивает и новые копии DOM дерева.
3. При работе cо списком одинковых сущностей - использовать атрибут key. Для правильной работы алгоритма и ускорения приложения.

как можно отдельно вынести key из props:
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
const data = [
        {name: 'Khalek I.', salary: 800, increase: false, key: 1},
];
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
const EmployeesList = ({data}) => {

    const elements = data.map(item => {
        
        const {id, ...itemProps} = item;
        return (
            <EmployeesListItem key={id} {...itemProps}/>
        )
    });

    return (
        <ul className="app-list list-group">
            {elements}
        </ul>
    )
}
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Урок 94. Состояние компонентов
1. У компонента может быть внутреннее состояние которое динамически меняется.
2. Состояние может быть как у классовых, так и у функциональных компонентов.
3. State на прямую менять нельзя! Только чеоез команду SetState
4. SetState и вообще изменение State - это асинхронная операци. Если нам нудна точность и последовательность данных, то нужно передавать callback 
5. Командой SetState мы можем менять те объекты, которые хотим изменить. Остальные останутся без изменений.

class WhoAmI extends Component {
    constructor(props) {
        super(props);
        this.state: 
            years: 23,
            text: 'click'
    }
}

nextYear = () => {
    this.setState(state => ({
        years: state.years + 1
    }))
}

||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Урок 96. События в React + this (контекст)
1. Каждый раз, когда выполняется setState - вызывается метод render().
    -и изменяться только те елементы, которые изменились и их нужно перерисовать.
https://ru.reactjs.org/docs/handling-events.html - обработка событий в React